install.packages("shinyjs")
load('data/dataf.RData')
getwd()
dir()
load('data/dataf.RData')
load("data/dataf.RData")
getwd()
dir()
setwd("/data")
setwd("data")
dir()
load("dataf.Rdata")
setwd("~/AlphaCruncher/Rdevelopment/shiny_apps/gordon_growth_model")
load("/data/dataf.RData")
load("data/dataf.RData")
load("gordon_data.RData")
getwd()
dir()
load("gordon_data.Rdata")
load("gordon_data.Rdata")
shiny::runApp()
runApp()
source("global.R")
gordon_data <- dataf
save(gordon_data, file = "gordon_data.Rdata")
source("global.R")
runApp()
runApp()
runApp()
source("global.R")
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
dFun <- function(dType) {
out <- data_plot() %>% dplyr::filter(data_type %in% dType) %>%
dplyr::select(value) %>% .[[1]]
}
View(gordon_data)
plot_data <- gordon_data %>% dplyr::filter(name %in% "a",
date %in% "1992-05-07") %>%
dplyr::select(data_type, value)
View(gordon_data)
View(plot_data)
View(gordon_data)
plot_data <- gordon_data %>% dplyr::filter(name %in% "a",
date %in% "1992-05-07") %>%
dplyr::select(data_type, value)
plot_data <- gordon_data %>% dplyr::filter(name %in% "a",
date %in% "1992-05-07")
View(gordon_data)
plot_data <- gordon_data %>% dplyr::filter(name %in% "a",
date %in% as.Date("1992-05-07")) %>%
dplyr::select(data_type, value)
View(plot_data)
?seq
dFun <- function(dType) {
out <- data_plot %>% dplyr::filter(data_type %in% dType) %>%
dplyr::select(value) %>% .[[1]]
}
dps <- dFun('dividend_per_share')
data_plot <- plot_data
dps <- dFun('dividend_per_share')
exp_ret <- dFun('expected_return')
dgr <- dFun('dividend_growth_rate')
gRange <- seq(0, .75 * exp_ret, by = .005)
price <- dFun('price')
price <- rep(price, length(gRange))
impPrice <- gordonGrowth(dps, gRange, exp_ret)
impPrice <- gordon_growth_formula(dps, gRange, exp_ret)
source("global.R")
source("global.R")
data_plot <- gordon_data %>%
dplyr::filter(name %in% "a") %>%
dplyr::select(data_type, value)
dps <- dFun('dividend_per_share')
exp_ret <- dFun('expected_return')
dgr <- dFun('dividend_growth_rate')
g_range <- seq(0, .75 * exp_ret, by = .005)
price <- dFun('price')
price <- rep(price, length(g_range))
impPrice <- gordon_growth_formula(dps, g_range, exp_ret)
exp_ret <- rep(exp_ret, length(g_range))
data_plot <- tibble(
growh = g_range,
price = price,
implied_price = impPrice,
expected_return = exp_ret
)
data_plot <- tibble::tibble(
growh = g_range,
price = price,
implied_price = impPrice,
expected_return = exp_ret
)
View(data_plot)
?ggplot2::ggplot
?geom_point
?ggplot
runApp()
runApp()
runApp()
?aes
runApp()
runApp()
runApp()
?aes
runApp()
runApp()
View(data_plot)
View(data_plot)
View(data_plot)
data_plot <- tibble::tibble(
growth = g_range,
price = price,
implied_price = impPrice,
expected_return = exp_ret
) %>%
reshape2::melt(id.vars("growth", "expected_return"))
data_plot <- tibble::tibble(
growth = g_range,
price = price,
implied_price = impPrice,
expected_return = exp_ret
) %>%
reshape2::melt(id.vars = c("growth", "expected_return"))
View(data_plot)
View(data_plot)
runApp()
View(gordon_data)
gordon_data %>% dplyr::select(data_type) %>% dplyr::distinct() %>% .[[1]] %>% print()
?randu
?runif
gordon_data <- tibble::tibble(date = as.Date(c("2016-05-07", "2016-05-07", "2016-05-07", "2016-05-07", "2017-05-07", "2017-05-07", "2017-05-07", "2017-05-07", "2016-05-07", "2016-05-07", "2016-05-07", "2016-05-07", "2017-05-07", "2017-05-07", "2017-05-07", "2017-05-07")), name = c("apple", "apple", "apple", "apple", "apple", "apple", "apple", "apple", "orange", "orange", "orange", "orange", "orange", "orange", "orange", "orange"), data_type = c("price", "expected_return", "dividend_per_share", "dividend_growth_rate", "price", "expected_return", "dividend_per_share", "dividend_growth_rate", "price", "expected_return", "dividend_per_share", "dividend_growth_rate", "price", "expected_return", "dividend_per_share", "dividend_growth_rate"), value = runif(16, 5, 15))
> View(gordon_data)
save(gordon_data, file="gordon_data.Rdata")
source("global.R")
View(gordon_data)
date %in% as.Date("2016-05-07")) %>%
data_plot <- gordon_data %>%
dplyr::filter(name %in% "apple",
date %in% as.Date("2016-05-07")) %>%
dplyr::select(data_type, value)
View(data_plot)
dps <- dFun('dividend_per_share')
dFun <- function(dType) {
out <- data_plot %>% dplyr::filter(data_type %in% dType) %>%
dplyr::select(value) %>% .[[1]]
}
dps <- dFun('dividend_per_share')
exp_ret <- dFun('expected_return')
dgr <- dFun('dividend_growth_rate')
g_range <- seq(0, .75 * exp_ret, by = .005)
price <- dFun('price')
price <- rep(price, length(g_range))
impPrice <- gordonGrowth(dps, g_range, exp_ret)
exp_ret <- rep(exp_ret, length(g_range))
data_plot <- tibble::tibble(
growth = g_range,
price = price,
implied_price = impPrice,
expected_return = exp_ret
) %>%
reshape2::melt(id.vars = c("growth", "expected_return"))
View(data_plot)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
