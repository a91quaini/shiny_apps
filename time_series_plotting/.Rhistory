reg.upperbound.med.mean.rob <- rlm(mkt.return ~ 1 + med.scaled)
summary(reg.upperbound.med.mean.rob)
r.squared <- function(y, fitted.values, k, noconst=TRUE) {
N <- length(y)
SS.e <- sum((y - fitted.values)^2)
if(noconst) {
SS.tot <- sum(y^2)
out1 <- 1 - SS.e / SS.tot
out2 <- 1 - (SS.e / (N - k)) / (SS.tot / N)
} else {
SS.tot <- sum((y - mean(y))^2)
out1 <- 1 - SS.e / SS.tot
out2 <- 1 - ((1-out1) * (N-1)) / (N - k)
}
out <- list(R.squared = out1, R.squared.adj = out2)
return(out)
}
summary(reg.upperbound.mean)
r.squared(mkt.return, reg.upperbound.mean$fitted.values, k=3, noconst=FALSE)
summary(reg.upperbound.mean.noconst)
r.squared(mkt.return, reg.upperbound.mean.noconst$fitted.values, k=2)
mean.ret.call <- mean(ret.call.ask)
mean.ret.put <- - mean(ret.put.bid)
mean.ret.call
mean.ret.put
fitted.values <- call.ask.scaled * mean.ret.call + put.bid.scaled * mean.ret.put
r.squared(mkt.return, fitted.values, 2)
ret.matrix <- matrix(c(ret.call.ask, ret.put.bid), ncol=2)
ret.matrix
mu <- colMeans(ret.matrix)
mu
ret.matrix <- matrix(c(ret.call.ask, - ret.put.bid), ncol=2)
mu <- colMeans(ret.matrix)
mu
mean.ret.call
mean.ret.put
sigma <- cov(ret.matrix)
sigma
N <- nrow(ftdata2)
?t
mu.hat
ret.matrix <- matrix(c(ret.call.ask, - ret.put.bid), ncol=2)
mu.hat <- colMeans(ret.matrix)
sigma.hat <- cov(ret.matrix)
test <- N *
fitted.values <- call.ask.scaled * mean.ret.call + put.bid.scaled * mean.ret.put
mu.hat
sigma.hat
dim(mu.hat)
test <- N * t(mu.hat) %*% solve(sigma.hat) %*% mu.hat
test
Y <- cbind(ret.call.ask, ret.call.bid)
fit <- lm(Y ~ 1)
summary(fit)
Y <- cbind(ret.call.ask, ret.put.bid)
fit <- lm(Y ~ 1)
summary(fit)
mean.ret.call
mean.ret.put
summary(manova(fit))
summary(anova(fit))
manova(fit)
mean.ret.call <- mean(ret.call.ask)
mean.ret.put <- - mean(ret.put.bid)
mean.ret.call
mean.ret.put
ret.matrix <- matrix(c(ret.call.ask, - ret.put.bid), ncol=2)
mu.hat <- colMeans(ret.matrix)
sigma.hat <- cov(ret.matrix)
test <- N * t(mu.hat) %*% solve(sigma.hat) %*% mu.hat
test
fitted.values <- call.ask.scaled * mean.ret.call + put.bid.scaled * mean.ret.put
r.squared(mkt.return, fitted.values, 2)
median.ret.call <- median(ret.call.ask)
median.ret.put <- - median(ret.put.bid)
median.ret.call
median.ret.put
fitted.values <- call.ask.scaled * median.ret.call + put.bid.scaled * median.ret.put
r.squared(mkt.return, fitted.values, 2)
huber.ret.call <- hubers(ret.call.ask)[[1]]
huber.ret.put <- - hubers(ret.put.bid)[[1]]
huber.ret.call
huber.ret.put
fitted.values <- call.ask.scaled * huber.ret.call + put.bid.scaled * huber.ret.put
r.squared(mkt.return, fitted.values, 2)
r.squared <- function(y, fitted.values, k, noconst=TRUE) {
N <- length(y)
SS.e <- sum((y - fitted.values)^2)
if(noconst) {
SS.tot <- sum(y^2)
out1 <- 1 - SS.e / SS.tot
out2 <- 1 - (SS.e / (N - k)) / (SS.tot / N)
} else {
SS.tot <- sum((y - mean(y))^2)
out1 <- 1 - SS.e / SS.tot
out2 <- 1 - ((1-out1) * (N-1)) / (N - k)
}
out <- list(R.squared = out1, R.squared.adj = out2)
return(out)
}
summary(reg.upperbound.mean)
library(roxygen2)
install.packages("roxygen2")
library(roxygen2)
library(quantreg)
max.eig <- function(N, sigma) {
d <- matrix(rnorm(N**2, sd = sigma), nrow = N)
#
E <- eigen(d)$values
#
abs(E)[[1]]
}
max.eig(5e2, 2)
?sapply
E = sapply(1:10000, function(n) {max.eig(5, 1)})
summary(E)
library(foreach)
foreach(n = 1:5) %do% max.eig(n, 1)
foreach(n = 1:5, .combine = 'c') %do% max.eig(n, 1)
foreach(n = 1:5) %:% foreach(m = 1:3) %do% max.eig(n, m)
foreach(n = 1:5) %:% foreach(m = 1:3, .combine = 'c') %do% max.eig(n, m)
foreach(n = 1:5, .combine='cbind') %:% foreach(m = 1:3, .combine = 'c') %do% max.eig(n, m)
foreach(n = 1:5, m = 1:3, .combine='c') %do% max.eig(n, m)
foreach(n = 1:100, .combine = c) %:% when (isPrime(n)) %do% n
install.packages("numbers")
library(numbers)
foreach(n = 1:100, .combine = c) %:% when (isPrime(n)) %do% n
foreach(n = 1:5) %dopar% max.eig(n, 1)
foreach(n = 1:5, .combine = c) %dopar% max.eig(n, 1)
foreach(n = 1:5, .combine = c) %dopar% max.eig(n, 1)
foreach(n = 1:5, .combine = 'c') %dopar% max.eig(n, 1)
foreach(n = 1:5, .combine = 'c') %dopar% max.eig(n, 1)
foreach(n = 1:5) %dopar% max.eig(n, 1)
install.packages("doMC")
registerDoMC(cores=4)
library("doMC")
registerDoMC(cores=4)
install.packages(rbenchmark)
install.packages("rbenchmark")
library(rbenchmark)
benchmark(
foreach(n = 1:50) %do% max.eig(n, 1),
foreach(n = 1:50) %dopar% max.eig(n, 1)
)
library(doMC)
library(doSNOW)
install.packages(doSNOW)
install.packages("doSNOW")
library(doSNOW)
cluster = makeCluster(4, type = "SOCK")
registerDoSNOW(cluster)
benchmark(
foreach(n = 1:50) %do% max.eig(n, 1),
foreach(n = 1:50) %dopar% max.eig(n, 1)
)
stopCluster(cluster)
cluster = makeCluster(4, type = "MPI")
registerDoSNOW(cluster)
benchmark(
foreach(n = 1:50) %do% max.eig(n, 1),
foreach(n = 1:50) %dopar% max.eig(n, 1)
)
cluster = makeCluster(4, type = "MPI")
registerDoSNOW(cluster)
install.packages("Rmpi")
library(Rmpi)
library(Rmpi)
install.packages("Rmpi")
library(Rmpi)
library(doParallel)
cluster = makeCluster(4, type = "FORK")
?makeCluster
cluster = makeCluster(4, type = "FORK")
library(doParallel)
cluster = makeCluster(4, type = "FORK")
library(doSNOW)
cluster = makeCluster(4, type = "FORK")
cluster = makeForkCluster(4)
stopCluster(cluster)
library(doParallel)
cluster = makeForkCluster(4)
shiny::runApp('Unige/Research/FearTrading/Data/app/ft_realized_fantasy')
library(quantreg)
runApp('Unige/Research/FearTrading/Data/app/ft_realized_fantasy')
sqrt(2)
8^(1/3)
66067/13
shiny::runApp('AlphaCruncher/Rdevelopment/shiny_apps/time_series_plotting')
runApp('AlphaCruncher/Rdevelopment/shiny_apps/time_series_plotting')
library(tidyverse)
runApp('AlphaCruncher/Rdevelopment/shiny_apps/time_series_plotting')
shiny::runApp('AlphaCruncher/Rdevelopment/shiny_apps/cross_sectional_plotting')
runApp('AlphaCruncher/Rdevelopment/shiny_apps/cross_sectional_plotting')
runApp('AlphaCruncher/Rdevelopment/shiny_apps/cross_sectional_plotting')
runApp('AlphaCruncher/Rdevelopment/shiny_apps/cross_sectional_plotting')
runApp('AlphaCruncher/Rdevelopment/shiny_apps/cross_sectional_plotting')
runApp('AlphaCruncher/Rdevelopment/shiny_apps/cross_sectional_plotting')
runApp('AlphaCruncher/Rdevelopment/shiny_apps/cross_sectional_plotting')
runApp('AlphaCruncher/Rdevelopment/shiny_apps/cross_sectional_plotting')
runApp('AlphaCruncher/Rdevelopment/shiny_apps/cross_sectional_plotting')
runApp('AlphaCruncher/Rdevelopment/shiny_apps/cross_sectional_plotting')
runApp('AlphaCruncher/Rdevelopment/shiny_apps/cross_sectional_plotting')
runApp('AlphaCruncher/Rdevelopment/shiny_apps/cross_sectional_plotting')
runApp('AlphaCruncher/Rdevelopment/shiny_apps/cross_sectional_plotting')
runApp('AlphaCruncher/Rdevelopment/shiny_apps/cross_sectional_plotting')
runApp('AlphaCruncher/Rdevelopment/shiny_apps/cross_sectional_plotting')
runApp('AlphaCruncher/Rdevelopment/shiny_apps/cross_sectional_plotting')
runApp('AlphaCruncher/Rdevelopment/shiny_apps/cross_sectional_plotting')
runApp('AlphaCruncher/Rdevelopment/shiny_apps/cross_sectional_plotting')
runApp('AlphaCruncher/Rdevelopment/shiny_apps/cross_sectional_plotting')
runApp('AlphaCruncher/Rdevelopment/shiny_apps/cross_sectional_plotting')
runApp('AlphaCruncher/Rdevelopment/shiny_apps/cross_sectional_plotting')
runApp('AlphaCruncher/Rdevelopment/shiny_apps/cross_sectional_plotting')
runApp('AlphaCruncher/Rdevelopment/shiny_apps/cross_sectional_plotting')
library(shiny)
runApp('AlphaCruncher/Rdevelopment/shiny_apps/cross_sectional_plotting')
runApp('AlphaCruncher/Rdevelopment/shiny_apps/cross_sectional_plotting')
runApp('AlphaCruncher/Rdevelopment/shiny_apps/cross_sectional_plotting')
runApp('AlphaCruncher/Rdevelopment/shiny_apps/cross_sectional_plotting')
runApp('AlphaCruncher/Rdevelopment/shiny_apps/cross_sectional_plotting')
runApp('AlphaCruncher/Rdevelopment/shiny_apps/cross_sectional_plotting')
runApp('AlphaCruncher/Rdevelopment/shiny_apps/cross_sectional_plotting')
runApp('AlphaCruncher/Rdevelopment/shiny_apps/time_series_plotting')
runApp('AlphaCruncher/Rdevelopment/shiny_apps/time_series_plotting')
runApp('AlphaCruncher/Rdevelopment/shiny_apps/cross_sectional_plotting')
runApp('AlphaCruncher/Rdevelopment/shiny_apps/cross_sectional_plotting')
runApp('AlphaCruncher/Rdevelopment/shiny_apps/cross_sectional_plotting')
runApp('AlphaCruncher/Rdevelopment/shiny_apps/cross_sectional_plotting')
runApp('AlphaCruncher/Rdevelopment/shiny_apps/cross_sectional_plotting')
runApp('AlphaCruncher/Rdevelopment/shiny_apps/cross_sectional_plotting')
runApp('AlphaCruncher/Rdevelopment/shiny_apps/cross_sectional_plotting')
runApp('AlphaCruncher/Rdevelopment/shiny_apps/cross_sectional_plotting')
runApp('AlphaCruncher/Rdevelopment/shiny_apps/cross_sectional_plotting')
runApp('AlphaCruncher/Rdevelopment/shiny_apps/cross_sectional_plotting')
runApp('AlphaCruncher/Rdevelopment/shiny_apps/cross_sectional_plotting')
runApp('AlphaCruncher/Rdevelopment/shiny_apps/cross_sectional_plotting')
runApp('AlphaCruncher/Rdevelopment/shiny_apps/time_series_plotting')
runApp('AlphaCruncher/Rdevelopment/shiny_apps/time_series_plotting')
runApp('AlphaCruncher/Rdevelopment/shiny_apps/time_series_plotting')
runApp('AlphaCruncher/Rdevelopment/shiny_apps/cross_sectional_plotting')
runApp('AlphaCruncher/Rdevelopment/shiny_apps/time_series_plotting')
runApp('AlphaCruncher/Rdevelopment/shiny_apps/time_series_plotting')
runApp('AlphaCruncher/Rdevelopment/shiny_apps/time_series_plotting')
runApp('AlphaCruncher/Rdevelopment/shiny_apps/time_series_plotting')
runApp('AlphaCruncher/Rdevelopment/shiny_apps/time_series_plotting')
runApp('AlphaCruncher/Rdevelopment/shiny_apps/time_series_plotting')
runApp('AlphaCruncher/Rdevelopment/shiny_apps/time_series_plotting')
runApp('AlphaCruncher/Rdevelopment/shiny_apps/time_series_plotting')
runApp('AlphaCruncher/Rdevelopment/shiny_apps/time_series_plotting')
runApp('AlphaCruncher/Rdevelopment/shiny_apps/time_series_plotting')
runApp('AlphaCruncher/Rdevelopment/shiny_apps/time_series_plotting')
setwd("~/AlphaCruncher/Rdevelopment/shiny_apps/time_series_plotting")
time_series_data <- readr::read_csv("data/time_series_data.csv")
tagging_data <- readr::read_csv("data/tagging_data.csv")
id_vector <- tagging_data %>%
filter(tag %in% "CHN_stocks") %>%
select(id) %>% .[[1]]
id_vector
time_series_data %>%
filter(id %in% id_vector,
value_type %in% "return",
frequency %in% "monthly")
runApp()
runApp()
time_series_data <- readr::read_csv("data/time_series_data.csv")
tagging_data <- readr::read_csv("data/tagging_data.csv")
id_vector <- tagging_data() %>%
filter(tag %in% "CHN_stocks") %>%
select(id) %>% .[[1]]
id_vector <- tagging_data %>%
filter(tag %in% "CHN_stocks") %>%
select(id) %>% .[[1]]
plot_dataframe <- time_series_data() %>%
filter(id %in% id_vector,
value_type %in% "return",
frequency %in% "monthly")
plot_dataframe <- time_series_data %>%
filter(id %in% id_vector,
value_type %in% "return",
frequency %in% "monthly")
plot_dataframe
ggplot(data = plot_dataframe) +
geom_line(mapping = aes(x = date, y = value, color = name))
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp('~/AlphaCruncher/Rdevelopment/shiny_apps/cross_sectional_plotting')
runApp()
runApp()
runApp()
?nearPoints
runApp()
runApp()
runApp()
clickOpts()
?clickOpts
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp('~/AlphaCruncher/Rdevelopment/shiny_apps/cross_sectional_plotting')
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp('~/Desktop/AlphaCruncher/Rdevelopment/shiny_apps/cross_sectional_plotting')
runApp('~/Desktop/AlphaCruncher/Rdevelopment/shiny_apps/cross_sectional_plotting')
runApp('~/Desktop/AlphaCruncher/Rdevelopment/shiny_apps/cross_sectional_plotting')
runApp('~/Desktop/AlphaCruncher/Rdevelopment/shiny_apps/cross_sectional_plotting')
runApp('~/Desktop/AlphaCruncher/Rdevelopment/shiny_apps/cross_sectional_plotting')
runApp('~/Desktop/AlphaCruncher/Rdevelopment/shiny_apps/cross_sectional_plotting')
runApp('~/Desktop/AlphaCruncher/Rdevelopment/shiny_apps/cross_sectional_plotting')
runApp('~/Desktop/AlphaCruncher/Rdevelopment/shiny_apps/cross_sectional_plotting')
runApp('~/Desktop/AlphaCruncher/Rdevelopment/shiny_apps/cross_sectional_plotting')
runApp('~/Desktop/AlphaCruncher/Rdevelopment/shiny_apps/cross_sectional_plotting')
runApp('~/Desktop/AlphaCruncher/Rdevelopment/shiny_apps/cross_sectional_plotting')
runApp('~/Desktop/AlphaCruncher/Rdevelopment/shiny_apps/cross_sectional_plotting')
runApp('~/Desktop/AlphaCruncher/Rdevelopment/shiny_apps/cross_sectional_plotting')
runApp('~/Desktop/AlphaCruncher/Rdevelopment/shiny_apps/cross_sectional_plotting')
runApp('~/Desktop/AlphaCruncher/Rdevelopment/shiny_apps/cross_sectional_plotting')
runApp()
runApp('~/Desktop/AlphaCruncher/Rdevelopment/shiny_apps/cross_sectional_plotting')
runApp('~/Desktop/AlphaCruncher/Rdevelopment/shiny_apps/cross_sectional_plotting')
runApp('~/Desktop/AlphaCruncher/Rdevelopment/shiny_apps/cross_sectional_plotting')
runApp('~/Desktop/AlphaCruncher/Rdevelopment/shiny_apps/cross_sectional_plotting')
runApp('~/Desktop/AlphaCruncher/Rdevelopment/shiny_apps/cross_sectional_plotting')
runApp('~/Desktop/AlphaCruncher/Rdevelopment/shiny_apps/cross_sectional_plotting')
runApp()
runApp('~/Desktop/AlphaCruncher/Rdevelopment/shiny_apps/cross_sectional_plotting')
runApp('~/Desktop/AlphaCruncher/Rdevelopment/shiny_apps/cross_sectional_plotting')
runApp('~/Desktop/AlphaCruncher/Rdevelopment/shiny_apps/cross_sectional_plotting')
runApp()
runApp('~/Desktop/AlphaCruncher/Rdevelopment/shiny_apps/cross_sectional_plotting')
runApp('~/Desktop/AlphaCruncher/Rdevelopment/shiny_apps/cross_sectional_plotting')
?ifelse
runApp('~/Desktop/AlphaCruncher/Rdevelopment/shiny_apps/cross_sectional_plotting')
runApp('~/Desktop/AlphaCruncher/Rdevelopment/shiny_apps/cross_sectional_plotting')
?case_when
dates_vector <- c(as.Date("1992-12-31"), as.Date("1991-12-31"))
dates_vector
?apply
runApp('~/Desktop/AlphaCruncher/Rdevelopment/shiny_apps/cross_sectional_plotting')
dates_vector
dates_test <- dates_vector
dates_test[2] <- as.Date("1993-12-31")
dates_vector
dates_test
ifelse(dates_test %in% dates_vector, dates_test, dates_vector)
as.Date(ifelse(dates_test %in% dates_vector, dates_test, dates_vector))
str(ifelse(dates_test %in% dates_vector, dates_test, dates_vector))
dates_test %in% dates_vector
ifelse(dates_test %in% dates_vector, dates_test, dates_vector)
dates_vector
str(dates_vector)
str(dates_test)
dates_test %in% dates_vector
ifelse(dates_test %in% dates_vector, dates_test, dates_vector)
runApp('~/Desktop/AlphaCruncher/Rdevelopment/shiny_apps/cross_sectional_plotting')
a <- c("1992-12-31")
str(a)
a <- c("1992-12-31", "1991-12-31")
str(a)
as.Date(a)
str(as.Date(a))
runApp('~/Desktop/AlphaCruncher/Rdevelopment/shiny_apps/cross_sectional_plotting')
?browser
runApp('~/Desktop/AlphaCruncher/Rdevelopment/shiny_apps/cross_sectional_plotting')
ifelse(dates_test %in% dates_vector, dates_test, dates_vector)
if_else(dates_test %in% dates_vector, dates_test, dates_vector)
runApp('~/Desktop/AlphaCruncher/Rdevelopment/shiny_apps/cross_sectional_plotting')
runApp('~/Desktop/AlphaCruncher/Rdevelopment/shiny_apps/cross_sectional_plotting')
as.Date(NULL)
as.Date(FALSE)
is.Truthy(as.Date(FALSE))
isTruthy(as.Date(FALSE))
try(as.Date(NULL))
runApp('~/Desktop/AlphaCruncher/Rdevelopment/shiny_apps/cross_sectional_plotting')
runApp('~/Desktop/AlphaCruncher/Rdevelopment/shiny_apps/cross_sectional_plotting')
runApp('~/Desktop/AlphaCruncher/Rdevelopment/shiny_apps/cross_sectional_plotting')
runApp('~/Desktop/AlphaCruncher/Rdevelopment/shiny_apps/cross_sectional_plotting')
runApp('~/Desktop/AlphaCruncher/Rdevelopment/shiny_apps/cross_sectional_plotting')
?if_else
runApp('~/Desktop/AlphaCruncher/Rdevelopment/shiny_apps/cross_sectional_plotting')
runApp('~/Desktop/AlphaCruncher/Rdevelopment/shiny_apps/cross_sectional_plotting')
time_series_data
time_series_data %>% filter(value_type %in% "return", frequency %in% "monthly", date %in% as.Date(c("1992-12-31", "1993-12-31"))
)
test <- time_series_data %>% filter(value_type %in% "return", frequency %in% "monthly", date %in% as.Date(c("1992-12-31", "1993-12-31")))
test
test <- time_series_data %>% filter(value_type %in% "return", frequency %in% "monthly", date %in% as.Date(c("1992-12-31", "1993-12-31")))
test
runApp('~/Desktop/AlphaCruncher/Rdevelopment/shiny_apps/cross_sectional_plotting')
test
test %>% mutate(ranking = order(value))
runApp('~/Desktop/AlphaCruncher/Rdevelopment/shiny_apps/cross_sectional_plotting')
runApp('~/Desktop/AlphaCruncher/Rdevelopment/shiny_apps/cross_sectional_plotting')
time_series_data
test
test1 <- test %>% mutate(ranking = order(value))
test1
?colnames
test1 %>% colnames(.$value_type, .$ranking) <- c("ciao", "cazzo")
test1 %>% colnames(.$value_type, .$ranking)
runApp('~/Desktop/AlphaCruncher/Rdevelopment/shiny_apps/cross_sectional_plotting')
runApp('~/Desktop/AlphaCruncher/Rdevelopment/shiny_apps/cross_sectional_plotting')
runApp('~/Desktop/AlphaCruncher/Rdevelopment/shiny_apps/cross_sectional_plotting')
test
runApp('~/Desktop/AlphaCruncher/Rdevelopment/shiny_apps/cross_sectional_plotting')
test1
test
test1
test %>% mutate(x = order(value))
names(test1)[names(test1) == "value"] <- "y"
test1
test1 %>% filter(date &in& as.Date("1992-12-31"))
test1 %>% filter(date %in% as.Date("1992-12-31"))
test1 %>% mutate(x = order(y))
test2 <- test1 %>% filter(date %in% as.Date("1992-12-31"))
test2 %>% mutate(x=order(y))
ggplot2::ggplot(test2 %>% mutate(x=order(y)), ggplot2::aes(x = x, y = y, color = tag)) +
ggplot2::geom_point()
ggplot2::ggplot(test2 %>% mutate(x=order(y)), ggplot2::aes(x = x, y = y)) +
ggplot2::geom_point()
runApp('~/Desktop/AlphaCruncher/Rdevelopment/shiny_apps/cross_sectional_plotting')
runApp('~/Desktop/AlphaCruncher/Rdevelopment/shiny_apps/cross_sectional_plotting')
runApp('~/Desktop/AlphaCruncher/Rdevelopment/shiny_apps/cross_sectional_plotting')
?mutate
runApp('~/Desktop/AlphaCruncher/Rdevelopment/shiny_apps/cross_sectional_plotting')
test3 <- test2 %>% mutate(x=order(y))
test3
order(y)
order(test3$y)
test3$y
order(c(1.1, 2.2, 0))
?order
?ranking
rank(c(1.1, 2.2, 0))
?rank
?ranking
min_rank(c(1.1,2.2,0))
runApp('~/Desktop/AlphaCruncher/Rdevelopment/shiny_apps/cross_sectional_plotting')
runApp('~/Desktop/AlphaCruncher/Rdevelopment/shiny_apps/cross_sectional_plotting')
test
test %>% group_by(date) %>% mutate(x = min_rank(value))
test %>% group_by(date) %>% mutate(x = min_rank(value)) %>% .$x
?group_by
runApp('~/Desktop/AlphaCruncher/Rdevelopment/shiny_apps/cross_sectional_plotting')
runApp('~/Desktop/AlphaCruncher/Rdevelopment/shiny_apps/cross_sectional_plotting')
runApp('~/Desktop/AlphaCruncher/Rdevelopment/shiny_apps/cross_sectional_plotting')
runApp('~/Desktop/AlphaCruncher/Rdevelopment/shiny_apps/cross_sectional_plotting')
runApp('~/Desktop/AlphaCruncher/Rdevelopment/shiny_apps/cross_sectional_plotting')
test <- time_series_data %>% filter(value_type %in% "return", frequency %in% "monthly", date %in% as.Date(c("1992-12-31", "1993-12-31")))
test
test %>% group_by(date)
test %>% group_by(date)
test
test %>% group_by(date) %>% mutate(x=precent_rank(value))
test %>% group_by(date) %>% ungroup()
runApp('~/Desktop/AlphaCruncher/Rdevelopment/shiny_apps/cross_sectional_plotting')
runApp('~/Desktop/AlphaCruncher/Rdevelopment/shiny_apps/cross_sectional_plotting')
shiny::runApp()
runApp('~/Desktop/AlphaCruncher/Rdevelopment/shiny_apps/cross_sectional_plotting')
runApp('~/Desktop/AlphaCruncher/Rdevelopment/shiny_apps/cross_sectional_plotting')
